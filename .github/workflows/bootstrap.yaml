name: "Bootstrap FluxCD"

on:
  repository_dispatch:
    types: [Kustomization/cluster-01.flux-system]
  workflow_dispatch:
    inputs:
      projectID:
        type: string
        description: 'GCP Project ID'
        default: 'kubecon-mgmt'
        required: true
      clusterName:
        type: string
        description: 'GKE Cluster Name'
        required: true
      location:
        type: string
        description: 'GKE Location Name (Region or Zone)'
        default: 'us-west1'
        required: true

permissions:
  id-token: write # This is required for requesting the JWT
  contents: read  # This is required for actions/checkout

jobs:
  bootstrap:
    runs-on: ubuntu-latest
    steps:
    # actions/checkout MUST come before auth
    - uses: 'actions/checkout@v3'

    - name: Run Bootstrap
      run: echo "running tests..${{ toJSON(github.event.client_payload.metadata) }}"

    - name: Override Defaults
      run: |
        echo "projectID=${{ github.event.inputs.projectID || github.event.client_payload.metadata.project }}" >> "${GITHUB_ENV}"
        echo "clusterName=${{ github.event.inputs.clusterName || github.event.client_payload.metadata.cluster }}" >> "${GITHUB_ENV}"
        echo "location=${{ github.event.inputs.location || github.event.client_payload.metadata.location }}" >> "${GITHUB_ENV}"

    - name: Setup Flux CLI
      uses: fluxcd/flux2/action@main

    - id: 'auth'
      name: 'Authenticate to Google Cloud'
      uses: 'google-github-actions/auth@v1'
      with:
        token_format: "access_token"
        workload_identity_provider: 'projects/572968775626/locations/global/workloadIdentityPools/github-oidc/providers/github-oidc'
        service_account: 'github-oidc@kubecon-mgmt.iam.gserviceaccount.com'

    - id: 'get-credentials'
      uses: 'google-github-actions/get-gke-credentials@v1'
      with:
        project_id: $projectID
        cluster_name: $clusterName
        location: $location

    # The KUBECONFIG env var is automatically exported and picked up by kubectl.
    - id: 'get-pods'
      run: 'kubectl get pods'
